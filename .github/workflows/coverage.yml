name: Coverage Report

on:
  push:
    branches: [ main, release/v1.0.0 ]
  pull_request:
    branches: [ main, release/v1.0.0 ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip wheels
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt', 'requirements-dev.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
        pip install -r requirements-dev.txt

    - name: Run tests with coverage
      run: |
        pytest --cov-fail-under=60

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

    - name: Upload coverage report as artifact
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report-${{ github.sha }}
        path: htmlcov/
        retention-days: 30

    - name: Comment PR with coverage report
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const coverage = fs.readFileSync('coverage.xml', 'utf8');
          const match = coverage.match(/line-rate="([^"]+)"/);
          const coveragePercent = match ? Math.round(parseFloat(match[1]) * 100) : 'Unknown';

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Coverage Report ðŸ“Š

            **Coverage: ${coveragePercent}%**

            Coverage report has been generated and uploaded as an artifact.
            You can download the HTML report from the Actions tab.

            Coverage threshold: 65%`
          });
